#!/usr/bin/env lua
---
-- The Lemma REPL
---

if _VERSION == 'Lua 5.1' then
	table.unpack = unpack
else
	loadstring = load
end


require 'exec'
LUA_VERSION = jit and jit.version or _VERSION
LEMMA_VERSION = 0.3

---
-- Execute command line argument or start a REPL
---
local o, f = ...

if o and o:sub(1, 1) ~= '-' then
	f, o = o, nil
	lemma['*sys-args*'] = Vectorize{select(1, ...)}
end
if o then
	lemma['*sys-args*'] = Vectorize{select(2, ...)}
end

local outfile
if o == '-debug' then
	lemma['*debug*'] = true
elseif o and string.sub(o, 1, 2) == '-o' then
	outfile = string.sub(o, 3)
end

if not f or f == '--' then
	f = io.input()
	prompt = 'lemma> '
	print('Lemma '..LEMMA_VERSION..' (on '..LUA_VERSION..')')
else
	f, msg = io.open(f)
	if not f then
		io.stderr:write(msg)
		return 1
	end
end
f = FileStream(f)

if outfile then
	local w
	if outfile == '--' then
		w = io.output()
	else
		w = io.open(outfile, 'w')
	end
	local code = "-- Lemma "..LEMMA_VERSION.." --"
	while code ~= Error'eof' do
		if lemma.type(code) == 'Error' then
			w:close()
			f:close()
			error(code:string())
		end
		w:write(code..'\n')
		code = lemma.compile(read(f, true), true)
	end
	w:write("-- EOF --\n")
	w:close()
	f:close()
else
	exec(f)
end

